version: '3.7'

networks:
  network:
    driver: overlay
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 10.0.255.0/24

services:
  app:
    image: grokkertech/jobseffect:latest
    ports:
      - 3000:3000
    networks:
      - network
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "3"

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    configs:
      - source: default.conf
        target: /etc/nginx/conf.d/default.conf
        mode: 0440
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - network

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    configs:
      - source: default.conf
        target: /etc/nginx/conf.d/default.conf
        mode: 0440
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - network

  nginx:
    image: nginx
    depends_on:
      - mysql
    ports:
      - "80:80"
      - "443:443"
    networks:
      - network
    configs:
      - source: default.conf
        target: /etc/nginx/conf.d/default.conf
        mode: 0440
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "3"

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - network
    volumes:
      - mongodb:/etc/mongo
    environment:
      discovery.type: single-node
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "3"

  portainer:
    image: portainer/portainer
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - network
    deploy:
      mode: replicated
      replicas: 1

volumes:
  mongodb:
    driver: local
  portainer_data:
    driver: local
  conf:
  vhost:
  html:
  dhparam:
  certs:

configs:
  default.conf:
    file: ./default.conf
  portainer.conf:
    file: ./portainer.conf
  fullchain.pem:
    file: ./fullchain.pem
  privkey.pem:
    file: ./privkey.pem

